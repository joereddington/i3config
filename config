# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 16

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym F5 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym F4 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym F6 exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status

# Other audio
bindsym F1 exec --no-startup-id playerctl previous
bindsym F2 exec --no-startup-id playerctl play-pause 
bindsym F3 exec --no-startup-id playerctl next 

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal -n "Terminal"

# kill focused window
bindsym $mod+Shift+q kill

# start a program launcher)
bindsym $mod+d exec rofi -show run
#bindsym $mod+d exec --no-startup-id dmenu_run -b -fn 'Ubuntu Mono:bold:pixelsize=35'
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
#bindsym $mod+j focus left
#bindsym $mod+k focus down
#bindsym $mod+l focus up
#bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
#bindsym $mod+Shift+j move left
#bindsym $mod+Shift+k move down
#bindsym $mod+Shift+l move up
#bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Trying to do some workspaces on another screen https://unix.stackexchange.com/questions/344329/assign-workspaces-on-i3-to-multiple-displays

workspace "1" output HDMI-0
workspace "2" output HDMI-0
workspace "3" output HDMI-0
workspace "4" output HDMI-0
workspace "5" output HDMI-0
workspace "6" output HDMI-0
workspace "7" output DP-0
workspace "8" output DP-0
workspace "9" output DP-0
workspace "10" output DP-0




# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9: Spotify"
set $ws10 "10"

# switch to workspace (The wallpaper thing isn't pretty but...)
#set $feh exec --NO-startup-id feh --bg-scale
#bindsym $mod+1 $feh ~/Pictures/wp/1.jpg; workspace 1
#bindsym $mod+2 $feh ~/Pictures/wp/2.jpg; workspace 2
#bindsym $mod+3 $feh ~/Pictures/wp/3.jpg; workspace 3
#bindsym $mod+4 $feh ~/Pictures/wp/4.jpg; workspace 4
#bindsym $mod+5 $feh ~/Pictures/wp/5.jpg; workspace 5
#bindsym $mod+6 $feh ~/Pictures/wp/6.jpg; workspace 6
#bindsym $mod+7 $feh ~/Pictures/wp/7.jpg; workspace 7
#bindsym $mod+8 $feh ~/Pictures/wp/8.jpg; workspace 8
#bindsym $mod+9 $feh ~/Pictures/wp/9.jpg; workspace 9
#bindsym $mod+0 $feh ~/Pictures/wp/10.jpg; workspace 10


# Define keybindings for changing the background color and switching workspaces
bindsym $mod+1 workspace 1; exec --NO-startup-id xsetroot -solid "#FFC0CB" # Pastel Pink
bindsym $mod+2 workspace 2; exec --NO-startup-id xsetroot -solid "#ADD8E6" # Pastel Blue
bindsym $mod+3 workspace 3; exec --NO-startup-id xsetroot -solid "#98FB98" # Pastel Green
bindsym $mod+4 workspace 4; exec --NO-startup-id xsetroot -solid "#FFFACD" # Pastel Yellow
bindsym $mod+5 workspace 5; exec --NO-startup-id xsetroot -solid "#E6E6FA" # Lavender
bindsym $mod+6 workspace 6; exec --NO-startup-id xsetroot -solid "#FFDAB9" # Peachpuff
bindsym $mod+7 workspace 7; exec --NO-startup-id xsetroot -solid "#FFA07A" # Light Salmon
bindsym $mod+8 workspace 8; exec --NO-startup-id xsetroot -solid "#FFFFFF" # White
bindsym $mod+9 workspace 9; exec --NO-startup-id xsetroot -solid "#808080" # Gray


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
#        bindsym j resize shrink width 10 px or 10 ppt
#        bindsym k resize grow height 10 px or 10 ppt
#        bindsym l resize shrink height 10 px or 10 ppt
#        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

# Joe's modifications

bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show
bindsym $mod+y resize set 1800 px 1600 px, move position center
exec "setxkbmap -layout us"


## Screenshots
bindsym --release Print exec "scrot -s $HOME/Downloads/`date +%Y-%m-%d_%H:%M:%S`.png"
bindsym --release $mod+Print exec "scrot  $HOME/Downloads/`date +%Y-%m-%d_%H:%M:%S`.png"

## Clipboard Screenshots
bindsym --release Ctrl+Print exec scrot -s -e 'xclip -selection clipboard -t image/png -i $f'
bindsym Ctrl+$mod+Print exec --NO-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --NO-startup-id maim --select | xclip -selection clipboard -t image/png

## Delores 
bindsym --release Ctrl+y exec /home/joe/git/delores/from_command_line.sh y 


# I want all windows to have a border (at least while I'm learning) 
for_window [class=.*] border pixel 8




# copy Q rules 
exec --NO-startup-id copyq
for_window [class="copyq"] floating enable # This works! 

exec --NO-startup-id setxkbmap us
exec --no-startup-id xmodmap /home/joe/.Xmodmap 


# gapbs
gaps inner 15px
gaps outer 10px 
